{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/nickd/Development/code/phase-2/cc2/code-challenge-2/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport RandomButton from \"./RandomButton\";\nimport PlaneteersContainer from \"./PlaneteersContainer\";\nimport SearchBar from \"./SearchBar\";\n\nfunction App() {\n  _s();\n\n  const [planters, setPlanters] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [sorted, setSorted] = useState(false);\n  useEffect(() => {\n    fetch('http://localhost:8003/planeteers').then(r => r.json()).then(data => setPlanters(data));\n  }, []);\n  const filteredPlanters = planters.filter(planter => {\n    return planter.name.toLowerCase().includes(search.toLowerCase()) || planter.bio.toLowerCase().includes(search.toLowerCase());\n  });\n  const sortedPlanters = planters.sort(planter1, planter2);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      setSearch: setSearch,\n      setSorted: setSorted\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RandomButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PlaneteersContainer, {\n      planters: filteredPlanters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"fcuBLRk6GYK9mrMYcclYeeib7pY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/nickd/Development/code/phase-2/cc2/code-challenge-2/src/components/App.js"],"names":["React","useState","useEffect","Header","RandomButton","PlaneteersContainer","SearchBar","App","planters","setPlanters","search","setSearch","sorted","setSorted","fetch","then","r","json","data","filteredPlanters","filter","planter","name","toLowerCase","includes","bio","sortedPlanters","sort","planter1","planter2"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,KAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAChBY,IAAAA,KAAK,CAAC,kCAAD,CAAL,CACCC,IADD,CACMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADX,EAECF,IAFD,CAEMG,IAAI,IAAIT,WAAW,CAACS,IAAD,CAFzB;AAGC,GAJQ,EAIN,EAJM,CAAT;AAMA,QAAMC,gBAAgB,GAAGX,QAAQ,CAACY,MAAT,CAAgBC,OAAO,IAAI;AAClD,WACEA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCd,MAAM,CAACa,WAAP,EAApC,KAA6DF,OAAO,CAACI,GAAR,CAAYF,WAAZ,GAA0BC,QAA1B,CAAmCd,MAAM,CAACa,WAAP,EAAnC,CAD/D;AAGD,GAJwB,CAAzB;AAMA,QAAMG,cAAc,GAAGlB,QAAQ,CAACmB,IAAT,CAAcC,QAAd,EAAwBC,QAAxB,CAAvB;AAEA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAElB,SAAtB;AAAiC,MAAA,SAAS,EAAEE;AAA5C;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,mBAAD;AAAqB,MAAA,QAAQ,EAAIM;AAAjC;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GA5BQZ,G;;KAAAA,G;AA8BT,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\n\nimport Header from \"./Header\";\nimport RandomButton from \"./RandomButton\";\nimport PlaneteersContainer from \"./PlaneteersContainer\";\nimport SearchBar from \"./SearchBar\";\n\nfunction App() {\n\n  const [planters, setPlanters] = useState([])\n  const [search, setSearch] = useState(\"\")\n  const [sorted, setSorted] = useState(false)\n\n  useEffect(() => {\n  fetch('http://localhost:8003/planeteers')\n  .then(r => r.json())\n  .then(data => setPlanters(data))\n  }, [])\n\n  const filteredPlanters = planters.filter(planter => {\n    return (\n      planter.name.toLowerCase().includes(search.toLowerCase()) || planter.bio.toLowerCase().includes(search.toLowerCase())\n    )\n  })\n\n  const sortedPlanters = planters.sort(planter1, planter2)\n\n  return (\n    <div>\n      <Header />\n      <SearchBar setSearch={setSearch} setSorted={setSorted}/>\n      <RandomButton />\n      <PlaneteersContainer planters = {filteredPlanters}/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}